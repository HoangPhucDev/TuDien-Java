/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package panelform;

import DAO.DAODanhSachTuDienYeuThich;
import DAO.DAOTuYeuThich;
import java.awt.Component;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListCellRenderer;
import javax.swing.JList;
import javax.swing.JOptionPane;
import model.DanhSachTuDienYeuThich;
import model.TuYeuThich;
import org.jdesktop.observablecollections.ObservableCollections;
import org.jdesktop.observablecollections.ObservableList;

/**
 *
 * @author Admin
 */
public class pnDSYeuThich extends javax.swing.JPanel {

    private ObservableList<DanhSachTuDienYeuThich> NhomDSYeuThich;
    private ObservableList<TuYeuThich> DSYeuThich;
    

    
    public ObservableList<DanhSachTuDienYeuThich> getNhomDSYeuThich() {
        return NhomDSYeuThich;
    }

    public void setNhomDSYeuThich(ObservableList<DanhSachTuDienYeuThich> NhomDSYeuThich) {
        this.NhomDSYeuThich = NhomDSYeuThich;
    }

    public ObservableList<TuYeuThich> getDSYeuThich() {
        return DSYeuThich;
    }

    public void setDSYeuThich(ObservableList<TuYeuThich> DSYeuThich) {
        this.DSYeuThich = DSYeuThich;
    }
    
    public pnDSYeuThich() {
        try {
            NhomDSYeuThich = ObservableCollections.observableList(DAODanhSachTuDienYeuThich.getListTudien());
            NhomDSYeuThich.add(0, new DanhSachTuDienYeuThich(0, "Tất Cả"));
            DSYeuThich = ObservableCollections.observableList(DAOTuYeuThich.getListTuYeuThich());
            
            initComponents();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi: Không Thể Kết Nối CSDL SQLServer \n"+ex, "Thông Báo", 0);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnTuYeuThich = new javax.swing.JPanel();
        cbbDS = new javax.swing.JComboBox<>();
        btnChonNhom = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDS = new javax.swing.JTable();
        pnNhom = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbNhomDS = new javax.swing.JTable();
        btnThemNhom = new javax.swing.JButton();
        btnSuaNhom = new javax.swing.JButton();
        btnXoaNhom = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTenNhom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();

        cbbDS.setRenderer(new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(JList list,Object value, int index, boolean isSelected, boolean cellHasFocus){
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof model.DanhSachTuDienYeuThich){
                    model.DanhSachTuDienYeuThich ds = (model.DanhSachTuDienYeuThich) value;
                    this.setText(ds.getName());
                }
                return this;
            }
        });
        cbbDS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${nhomDSYeuThich}");
        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, this, eLProperty, cbbDS);
        bindingGroup.addBinding(jComboBoxBinding);

        cbbDS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbbDSActionPerformed(evt);
            }
        });

        btnChonNhom.setText("Lọc");
        btnChonNhom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonNhomActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa Khỏi Danh Sách");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${DSYeuThich}");
        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tbDS);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("ID");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${word}"));
        columnBinding.setColumnName("Từ");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${detail}"));
        columnBinding.setColumnName("Nghĩa");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${groupFAV.name}"));
        columnBinding.setColumnName("Nhóm");
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(tbDS);
        if (tbDS.getColumnModel().getColumnCount() > 0) {
            tbDS.getColumnModel().getColumn(0).setMinWidth(30);
            tbDS.getColumnModel().getColumn(0).setPreferredWidth(70);
            tbDS.getColumnModel().getColumn(0).setMaxWidth(100);
            tbDS.getColumnModel().getColumn(1).setMinWidth(100);
            tbDS.getColumnModel().getColumn(1).setPreferredWidth(200);
            tbDS.getColumnModel().getColumn(1).setMaxWidth(250);
            tbDS.getColumnModel().getColumn(3).setMinWidth(100);
            tbDS.getColumnModel().getColumn(3).setPreferredWidth(100);
            tbDS.getColumnModel().getColumn(3).setMaxWidth(150);
        }

        javax.swing.GroupLayout pnTuYeuThichLayout = new javax.swing.GroupLayout(pnTuYeuThich);
        pnTuYeuThich.setLayout(pnTuYeuThichLayout);
        pnTuYeuThichLayout.setHorizontalGroup(
            pnTuYeuThichLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnTuYeuThichLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnTuYeuThichLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(pnTuYeuThichLayout.createSequentialGroup()
                        .addComponent(cbbDS, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnChonNhom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoa)
                        .addGap(0, 335, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnTuYeuThichLayout.setVerticalGroup(
            pnTuYeuThichLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnTuYeuThichLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnTuYeuThichLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbbDS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnChonNhom)
                    .addComponent(btnXoa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Quản Lý Từ Yêu Thích", pnTuYeuThich);

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${nhomDSYeuThich}");
        jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, eLProperty, tbNhomDS);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${id}"));
        columnBinding.setColumnName("ID");
        columnBinding.setColumnClass(Integer.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${name}"));
        columnBinding.setColumnName("Tên");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane2.setViewportView(tbNhomDS);
        if (tbNhomDS.getColumnModel().getColumnCount() > 0) {
            tbNhomDS.getColumnModel().getColumn(0).setMinWidth(30);
            tbNhomDS.getColumnModel().getColumn(0).setPreferredWidth(100);
            tbNhomDS.getColumnModel().getColumn(0).setMaxWidth(150);
        }

        btnThemNhom.setText("Thêm");
        btnThemNhom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemNhomActionPerformed(evt);
            }
        });

        btnSuaNhom.setText("Sửa");
        btnSuaNhom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaNhomActionPerformed(evt);
            }
        });

        btnXoaNhom.setText("Xóa");
        btnXoaNhom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaNhomActionPerformed(evt);
            }
        });

        jLabel1.setText("Tên Nhóm");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ, tbNhomDS, org.jdesktop.beansbinding.ELProperty.create("${selectedElement.name}"), txtTenNhom, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout pnNhomLayout = new javax.swing.GroupLayout(pnNhom);
        pnNhom.setLayout(pnNhomLayout);
        pnNhomLayout.setHorizontalGroup(
            pnNhomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnNhomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnNhomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(pnNhomLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenNhom, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnThemNhom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSuaNhom)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnXoaNhom, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnNhomLayout.setVerticalGroup(
            pnNhomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnNhomLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnNhomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnNhomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(btnThemNhom)
                        .addComponent(btnSuaNhom)
                        .addComponent(btnXoaNhom))
                    .addComponent(txtTenNhom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 271, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Quản Lý Nhóm", pnNhom);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 204, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DANH SÁCH TỪ QUAN TÂM");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        TuYeuThich tuyeuthich = new TuYeuThich();
        int ret = JOptionPane.showConfirmDialog(this, "Bạn Chắc Chắn Muốn Xóa", "Thông Báo", JOptionPane.YES_NO_OPTION);
        try{
            if (ret == JOptionPane.YES_OPTION) {
                int Checkrs =  DAOTuYeuThich.Delete(Integer.valueOf(tbDS.getValueAt(tbDS.getSelectedRow(), 0).toString()));
                if (Checkrs == 1) {
                    DSYeuThich.remove(tbDS.getSelectedRow());
                    JOptionPane.showMessageDialog(this, "Xóa Thành Công", "Thông Báo", 1);
                } else {
                    JOptionPane.showMessageDialog(this, "Lổi: Không Thể Xóa", "Thông Báo", 0);
                }
            }
        }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "Lỗi: Vui Lòng Chọn Từ", "Thông Báo", 0);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi: Kết Nối CSDL SQLServer \n"+ex, "Thông Báo", 0);
        } 
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnChonNhomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonNhomActionPerformed

        // DSYeuThich = ObservableCollections.observableList(TuYeuThich.getByGroup(Integer.valueOf(cbbDS.getSelectedItem().toString())));
        if(Integer.parseInt(cbbDS.getSelectedItem().toString()) > 0)
        {
            DSYeuThich.removeAll(DSYeuThich);
            try {
                DSYeuThich.addAll(DAOTuYeuThich.getByGroup(Integer.valueOf(cbbDS.getSelectedItem().toString())));
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Lỗi: Không Thể Kết Nối SQLServer \n"+ex, "Thông Báo", 0);
            }
        
        }else
        {
            DSYeuThich.removeAll(DSYeuThich);
            try {
                DSYeuThich.addAll(DAOTuYeuThich.getListTuYeuThich());
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Lỗi: Không Thể Kết Nối SQLServer \n"+ex, "Thông Báo", 0);
            }
        }
    }//GEN-LAST:event_btnChonNhomActionPerformed

    private void btnThemNhomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemNhomActionPerformed
        
        try {
            int Checkrs = DAODanhSachTuDienYeuThich.Insert(txtTenNhom.getText());
            if(Checkrs == 1)
            {
                NhomDSYeuThich.add(new DanhSachTuDienYeuThich(DAODanhSachTuDienYeuThich.getMaxId(), txtTenNhom.getText()));
                
            }else
            {
                JOptionPane.showMessageDialog(this, "Lỗi: Không Thể Thêm", "Thông Báo", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi: Không Thể Kết Nối SQLServer \n"+ex, "Thông Báo", 0);
        }
        
    }//GEN-LAST:event_btnThemNhomActionPerformed

    private void btnSuaNhomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaNhomActionPerformed

        try{
            int Checkrs = DAODanhSachTuDienYeuThich.Update(Integer.valueOf(tbNhomDS.getValueAt(tbNhomDS.getSelectedRow(), 0).toString()),
                txtTenNhom.getText());
            if(Checkrs == 1)
            {

                NhomDSYeuThich.set(tbNhomDS.getSelectedRow(), new DanhSachTuDienYeuThich(Integer.valueOf(tbNhomDS.getValueAt(tbNhomDS.getSelectedRow(), 0).toString()),
                    txtTenNhom.getText()));

        }else
        {
            JOptionPane.showMessageDialog(this, "Lỗi: Không Thể Sữa", "Thông Báo", 0);
        }
        }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "Lỗi: Vui Lòng Chọn Từ", "Thông Báo", 0);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi: Không Tìm Thấy Thư viện điều khiển SQLServer \n"+ex, "Thông Báo", 0);
        }
    }//GEN-LAST:event_btnSuaNhomActionPerformed

    private void btnXoaNhomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaNhomActionPerformed
        int ret = JOptionPane.showConfirmDialog(this, "Bạn Chắc Chắn Muốn Xóa", "Thông Báo", JOptionPane.YES_NO_OPTION);
        try{
            if (ret == JOptionPane.YES_OPTION) {
                int Checkrs =  DAODanhSachTuDienYeuThich.Delete(Integer.valueOf(tbNhomDS.getValueAt(tbNhomDS.getSelectedRow(), 0).toString()));
                if (Checkrs == 1) {
                    NhomDSYeuThich.remove(tbNhomDS.getSelectedRow());

                } else {
                    JOptionPane.showMessageDialog(this, "Lổi: Không Thể Xóa", "Thông Báo", 0);
                }
            }
        }catch(ArrayIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(this, "Lỗi: Vui Lòng Chọn Từ", "Thông Báo", 0);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi: Không Thể Kết Nối CSDL SQLServer \n"+ex, "Thông Báo", 0);
        }
    }//GEN-LAST:event_btnXoaNhomActionPerformed

    private void cbbDSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbbDSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbbDSActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonNhom;
    private javax.swing.JButton btnSuaNhom;
    private javax.swing.JButton btnThemNhom;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btnXoaNhom;
    private javax.swing.JComboBox<String> cbbDS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnNhom;
    private javax.swing.JPanel pnTuYeuThich;
    private javax.swing.JTable tbDS;
    private javax.swing.JTable tbNhomDS;
    private javax.swing.JTextField txtTenNhom;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
